
name: Django CI & CD

on:
  push:

jobs:
  ci:
    env:
      DB_DATABASE: MM
      DB_USER: root
      DB_PASSWORD: 2349

    runs-on: ubuntu-latest
    steps:
    - name: Check out the codes
      uses: actions/checkout@v2

    - name: Set timezone to KST
      run: |
        sudo rm /etc/localtime
        sudo ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

    # Start Mysql
    # https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
    - name: Start Mysql
      run: |
        sudo systemctl start mysql
        mysql -e "use mysql; FLUSH PRIVILEGES; ALTER USER '${{ env.DB_USER }}'@'localhost' IDENTIFIED BY '${{ env.DB_PASSWORD }}';" -uroot -proot
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
    

    - name: Setup python environment
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.9


    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Test python project
      run: |
        python manage.py test

  build-image:
    needs: [ci]
    runs-on: ubuntu-latest
#    if: contains(github.ref, 'main')

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/mm-project:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  cd-pipeline:
    needs: [build-image]
    name: continuos deploy
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yaml"
          target: "/home/ec2-user/"

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: "docker-compose pull && docker-compose up -d"